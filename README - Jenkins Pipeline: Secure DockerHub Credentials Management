This Jenkins pipeline demonstrates how to securely manage DockerHub credentials and automate Python app testing.

Pipeline Steps

    Clean Workspace – Clears the previous build workspace.
    Checkout Code – Clones the Python app repository.
    Set Up Environment – Installs Python dependencies from requirements.txt.
    Unit Testing – Runs tests using pytest.
    Login to DockerHub – Authenticates to a private Docker registry using Jenkins stored secret credentials.

Key Feature

    Uses Jenkins secret text credential (dockerhubpwd) and withCredentials to inject DockerHub password securely during pipeline execution, preventing exposure of sensitive data.

Purpose

Automates build and test workflow while securely handling DockerHub login for private registry operations.
